version: "2.1"

services:
  consumer-local:
    image: consumer 
    ports:
      - "8000:4000"

    environment:
      PORT: 4000

      KAFKA_HOST: kafka:9092

      POSTGRES_USERNAME: "${POSTGRES_USERNAME}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"

      POSTGRES_URL: "${POSTGRES_URL}"

    networks:
      - kafka-net

  producer-local:
    image: producer 
    ports:
      - "9000:9000"

    environment:
      PORT: 9000

      KAFKA_HOST: kafka:9092

      AVIATION_KEY: ${AVIATION_KEY} 
      AVIATION_BASE_URL: http://api.aviationstack.com/v1/

      AERO_KEY: ${AERO_KEY} 
      AERO_BASE_URL: https://aeroapi.flightaware.com/aeroapi

    networks:
      - kafka-net

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"

    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181      
      KAFKA_CREATE_TOPICS: "FlightData"

    networks:
      - kafka-net

    volumes: 
      - ./kafka:/kafka

networks:
  kafka-net:
    driver: bridge
